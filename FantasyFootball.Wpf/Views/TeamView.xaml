<views:MvxWpfView
        xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
        xmlns:mvx="clr-namespace:MvvmCross.Platforms.Wpf.Binding;assembly=MvvmCross.Platforms.Wpf"
        x:Class="FantasyFootball.Wpf.Views.TeamView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:FantasyFootball.Wpf.Views"
        xmlns:validators="clr-namespace:FantasyFootball.Wpf.ValidationRules"
        xmlns:convertors="clr-namespace:FantasyFootball.Wpf.Converters"
        xmlns:sysControls="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
        mc:Ignorable="d"
        d:DesignHeight="450" d:DesignWidth="900"
        FontFamily="Adobe Clean" FontWeight="Light" FontSize="20">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/TextBoxValidator.xaml"/>
                <ResourceDictionary Source="../Styles/RoundedButton.xaml"/>
                <ResourceDictionary Source="../Styles/TextBoxDesign.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <sysControls:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <convertors:InverseAndBooleansToBooleanConverter x:Key="InverseAndBooleansToBooleanConverter"/>
            <convertors:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <!--Main Grid-->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
        
        <!--Subtitle-->
        <Label Content="Add Player"
               Grid.Column="1"
               Grid.Row="1"
               FontSize="36"
               FontWeight="ExtraLight"
               HorizontalAlignment="Center"/>
        
        <!--Grid of fields-->
        <Grid Grid.Row="2" Grid.Column="1" Margin="0 0 10 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            
            <!--First Name-->
            <Label Content="First name:" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <TextBox Name="FirstNameTxtBox" Grid.Column="1" VerticalAlignment="Center" Template="{DynamicResource TextBoxDesign}" TabIndex="0"
                     IsEnabled="{Binding IsPlayerLimitReached, Converter={StaticResource InverseBooleanConverter}}">
                <TextBox.Text>
                    <Binding Path="PlayerFirstName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:StringValidationRule FieldName="First name" MaxLength="20" ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            
            <!--Last Name-->
            <Label Content="Last name:" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBox Name="LastNameTxtBox" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" Template="{DynamicResource TextBoxDesign}" 
                     TabIndex="1" IsEnabled="{Binding IsPlayerLimitReached, Converter={StaticResource InverseBooleanConverter}}">
                <TextBox.Text>
                    <Binding Path="PlayerLastName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:StringValidationRule FieldName="Last name" MaxLength="20" ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            
            <!--Goals-->
            <Label Content="Goals:" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBox Name="GoalsTxtBox" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Template="{DynamicResource TextBoxDesign}" 
                     TabIndex="2" IsEnabled="{Binding IsPlayerLimitReached, Converter={StaticResource InverseBooleanConverter}}">
                <TextBox.Text>
                    <Binding Path="Goals" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:NullPositiveIntegerValidationRule FieldName="Goals" ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <!--Yellow Cards-->
            <Label Content="Yellow Cards:" Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBox Name="YellowCardsTxtBox" Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" Template="{DynamicResource TextBoxDesign}" 
                     TabIndex="3" IsEnabled="{Binding IsPlayerLimitReached, Converter={StaticResource InverseBooleanConverter}}">
                <TextBox.Text>
                    <Binding Path="YellowCards" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:NullPositiveIntegerValidationRule FieldName="Yellow cards" ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <!--Red Cards-->
            <Label Content="Red Cards:" Grid.Row="4" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBox Name="RedCardsTxtBox" Grid.Row="4" Grid.Column="1" VerticalAlignment="Center" Template="{DynamicResource TextBoxDesign}"
                     TabIndex="4" IsEnabled="{Binding IsPlayerLimitReached, Converter={StaticResource InverseBooleanConverter}}">
                <TextBox.Text>
                    <Binding Path="RedCards" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:NullPositiveIntegerValidationRule FieldName="Red cards" ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <!--Displays when player limit is reached-->
            <Label Name="PlayerLimitLb"
                   Content="Team can have maximum of five players"
                   FontSize="10" Foreground="Red"
                   HorizontalAlignment="Center"
                   Visibility="{Binding IsPlayerLimitReached, Converter={StaticResource BooleanToVisibilityConverter}}"
                   Grid.Row="5" Grid.ColumnSpan="2"/>
        </Grid>
        
        <!--Team Value-->
        <WrapPanel Grid.Row="1" Grid.Column="2" VerticalAlignment="Center">
            <Label Content="{Binding TeamName}"/>
            <Label Content="Value:"
                   FontSize="20"/>
            <Label Content="{Binding TeamValue}" FontWeight="Bold"
                   Grid.Column="1"/>
        </WrapPanel>
        
        <!--Exit to main menu-->
        <Button Grid.Row="1" Grid.Column="2" 
                HorizontalAlignment="Right" VerticalAlignment="Center"
                Content="Exit to main menu" FontSize="15"
                Click="ExitToMainMenu_OnClick"
                Style="{DynamicResource RoundedButtonStyle}"
                TabIndex="7"/>

        <!--Datagrid of team-->
        <DataGrid ItemsSource="{Binding Players}" 
                  IsReadOnly="True"
                  Grid.Column="2" Grid.Row="2"
                  AutoGenerateColumns="False"
                  IsTabStop="False">
            
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding FullName}"/>
                <DataGridTextColumn Header="Value" Binding="{Binding Value}"/>
            </DataGrid.Columns>

            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <Expander Expanded="Expander_Process" Collapsed="Expander_Process"/>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>
            
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Grid Background="WhiteSmoke">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="First name:" FontWeight="SemiBold" FontSize="15"/>
                        <Label Content="{Binding FirstName}" FontSize="15" Grid.Column="1"/>

                        <Label Content="Last name:" FontWeight="SemiBold" FontSize="15" Grid.Row="1"/>
                        <Label Content="{Binding LastName}" FontSize="15" Grid.Row="1" Grid.Column="1"/>

                        <Label Content="Goals:" FontWeight="SemiBold" FontSize="15" Grid.Column="2"/>
                        <Label Content="{Binding Goals}" FontSize="15" Grid.Column="3"/>

                        <Label Content="Yellow cards:" FontWeight="SemiBold" FontSize="15" Grid.Row="1" Grid.Column="2"/>
                        <Label Content="{Binding YellowCards}" FontSize="15" Grid.Row="1" Grid.Column="3"/>

                        <Label Content="Red cards:" FontWeight="SemiBold" FontSize="15" Grid.Row="2" Grid.Column="2"/>
                        <Label Content="{Binding RedCards}" FontSize="15" Grid.Row="2" Grid.Column="3"/>

                    </Grid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
        
        <!--Add Player button-->
        <Button mvx:Bi.nd="Command AddPlayerCommand"
                    Content="Add Player"
                    Grid.Row="3" Grid.Column="1"
                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Padding="10"
                    Style="{DynamicResource RoundedButtonStyle}"
                    TabIndex="5">
            <Button.IsEnabled>
                <MultiBinding Converter="{StaticResource InverseAndBooleansToBooleanConverter}">
                    <Binding ElementName="FirstNameTxtBox" Path="(Validation.HasError)"/>
                    <Binding ElementName="LastNameTxtBox" Path="(Validation.HasError)"/>
                    <Binding ElementName="GoalsTxtBox" Path="(Validation.HasError)"/>
                    <Binding ElementName="YellowCardsTxtBox" Path="(Validation.HasError)"/>
                    <Binding ElementName="RedCardsTxtBox" Path="(Validation.HasError)"/>
                    <Binding Path="IsPlayerLimitReached"/>
                </MultiBinding>
            </Button.IsEnabled>
        </Button>

        <!--https://stackoverflow.com/a/64861760/14106896 
        - How to save file while maintaining MVVM
        Scenario 1 is most useful in my case.-->
        <!--Save team button-->
        <Button Content="Save Team" Grid.Column="2" Grid.Row="3"
                HorizontalAlignment="Center" VerticalAlignment="Center" 
                Padding="10" Click="SaveTeamToFile_OnClick"
                Style="{DynamicResource RoundedButtonStyle}"
                TabIndex="6"/>

    </Grid>
</views:MvxWpfView>